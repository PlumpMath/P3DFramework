

pass Default:

    vertex:
        template default

        uniform samplerBuffer chunkDataBuffer;
        uniform sampler2D heightmap;
        uniform vec3 terrainOffset;
        uniform vec3 terrainScale;

        insert @WS_POSITION:

            vec4 chunk_data = texelFetch(chunkDataBuffer, gl_InstanceID);
            vOutput.positionWorld.xy = p3d_Vertex.xy * chunk_data.z;
            vOutput.positionWorld.xy += chunk_data.xy;
            vOutput.positionWorld.z = 0.0;
            vOutput.texcoord = vOutput.positionWorld.xy / textureSize(heightmap, 0).xy;

            vOutput.positionWorld.z += texture(heightmap, vOutput.texcoord).x;

            vOutput.positionWorld.xyz = vOutput.positionWorld.xyz * terrainScale + terrainOffset;




    fragment:
        template default


pass Shadows:

    vertex:
        template default

        uniform samplerBuffer chunkDataBuffer;
        uniform sampler2D heightmap;
        uniform vec3 terrainOffset;
        uniform vec3 terrainScale;

        insert @WS_POSITION:
            
            vec4 chunk_data = texelFetch(chunkDataBuffer, gl_InstanceID);
            vOutput.positionWorld.xy = p3d_Vertex.xy * chunk_data.z;
            vOutput.positionWorld.xy += chunk_data.xy;
            vOutput.positionWorld.z = 0.0;
            vOutput.texcoord = vOutput.positionWorld.xy / textureSize(heightmap, 0).xy;
            vOutput.positionWorld.z += texture(heightmap, vOutput.texcoord).x;
            vOutput.positionWorld.xyz = vOutput.positionWorld.xyz * terrainScale + terrainOffset;


            if (any(greaterThan(vOutput.texcoord, vec2(1.0 - 1.0 / 2048.0))) || any(lessThan(vOutput.texcoord, vec2(1.0 / 2048.0)))) {
                vOutput.positionWorld.z = terrainOffset.z - 500.0;
            }



    fragment:
        template default
