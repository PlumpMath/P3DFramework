1438597043
2 3
13 RSCoreModules 4 iNUn 13 RSCoreModules 
14
16 19 TerrainMeshRenderer 0 4 30 40 TerrainMeshRenderer::TerrainMeshRenderer 0 1 1 0
47
TerrainMeshRenderer::TerrainMeshRenderer(void);

17 20 ~TerrainMeshRenderer 0 4 30 41 TerrainMeshRenderer::~TerrainMeshRenderer 0 0 0
48
TerrainMeshRenderer::~TerrainMeshRenderer(void);

18 6 create 0 4 30 27 TerrainMeshRenderer::create 0 1 2 0
39
void TerrainMeshRenderer::create(void);

19 6 update 0 4 30 27 TerrainMeshRenderer::update 0 1 3 0
39
void TerrainMeshRenderer::update(void);

20 20 set_heightfield_size 0 4 30 41 TerrainMeshRenderer::set_heightfield_size 0 1 4 0
57
void TerrainMeshRenderer::set_heightfield_size(int size);

21 9 set_focus 0 4 30 30 TerrainMeshRenderer::set_focus 0 1 5 0
63
void TerrainMeshRenderer::set_focus(NodePath *cam, Lens *lens);

22 15 load_chunk_mesh 0 4 30 36 TerrainMeshRenderer::load_chunk_mesh 0 1 6 0
66
void TerrainMeshRenderer::load_chunk_mesh(string const &filename);

23 11 load_bounds 0 4 30 32 TerrainMeshRenderer::load_bounds 0 1 7 0
62
void TerrainMeshRenderer::load_bounds(string const &filename);

24 9 set_scale 0 4 30 30 TerrainMeshRenderer::set_scale 0 2 8 9 0
124
void TerrainMeshRenderer::set_scale(float sx, float sy, float height);
void TerrainMeshRenderer::set_scale(LVecBase3 scale);

25 7 set_pos 0 4 30 28 TerrainMeshRenderer::set_pos 0 2 10 11 0
111
void TerrainMeshRenderer::set_pos(float x, float y, float z);
void TerrainMeshRenderer::set_pos(LVecBase3 pos);

26 25 set_target_triangle_width 0 4 30 46 TerrainMeshRenderer::set_target_triangle_width 0 1 12 0
65
void TerrainMeshRenderer::set_target_triangle_width(float width);

27 19 set_culling_enabled 0 4 30 40 TerrainMeshRenderer::set_culling_enabled 0 1 13 0
60
void TerrainMeshRenderer::set_culling_enabled(bool enabled);

28 8 get_node 0 4 30 29 TerrainMeshRenderer::get_node 0 1 14 0
45
NodePath TerrainMeshRenderer::get_node(void);

29 15 generate_bounds 0 4 30 36 TerrainMeshRenderer::generate_bounds 0 1 15 0
114
static void TerrainMeshRenderer::generate_bounds(string const &filename, string const &dest, int chunk_size = 32);

15
1 0 0 7 2 31 17 0 0 0 
2 0 0 4 4 32 0 0 0 1 4 this 3 31  
3 0 0 4 5 32 0 0 0 1 4 this 3 31  
4 0 0 4 6 32 0 0 0 2 4 this 3 31  4 size 1 33  
5 0 0 4 7 32 0 0 0 3 4 this 3 31  3 cam 1 34  4 lens 1 36  
6 0 0 4 8 32 0 0 0 2 4 this 3 31  8 filename 1 38  
7 0 0 4 9 32 0 0 0 2 4 this 3 31  8 filename 1 38  
8 0 0 4 10 32 0 0 0 2 4 this 3 31  5 scale 1 39  
9 0 0 4 10 32 0 0 0 4 4 this 3 31  2 sx 1 42  2 sy 1 42  6 height 1 42  
10 0 0 4 11 32 0 0 0 2 4 this 3 31  3 pos 1 39  
11 0 0 4 11 32 0 0 0 4 4 this 3 31  1 x 1 42  1 y 1 42  1 z 1 42  
12 0 0 4 12 32 0 0 0 2 4 this 3 31  5 width 1 42  
13 0 0 4 13 32 0 0 0 2 4 this 3 31  7 enabled 1 43  
14 0 0 7 14 34 0 0 0 1 4 this 3 31  
15 0 0 4 15 32 0 0 0 3 8 filename 1 38  4 dest 1 38  10 chunk_size 1 33  
14
30 19 TerrainMeshRenderer 0 26625 19 TerrainMeshRenderer 19 TerrainMeshRenderer 0 0 0 1 16 17 0 12 18 19 20 21 22 23 24 25 26 27 28 29 0 0 0 0 0 0

31 21 TerrainMeshRenderer * 0 8576 21 TerrainMeshRenderer * 21 TerrainMeshRenderer * 0 0 30 0 0 0 0 0 0 0 0 0 0

32 4 void 0 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

33 3 int 0 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

34 10 NodePath * 0 8576 10 NodePath * 10 NodePath * 0 0 35 0 0 0 0 0 0 0 0 0 0

35 8 NodePath 0 2048 8 NodePath 8 NodePath 0 0 0 0 0 0 0 2 44 45 0 0 0 0 1139
////////////////////////////////////////////////////////////////////
//       Class : NodePath
// Description : NodePath is the fundamental system for disambiguating
//               instances, and also provides a higher-level interface
//               for manipulating the scene graph.
//
//               A NodePath is a list of connected nodes from the root
//               of the graph to any sub-node.  Each NodePath
//               therefore uniquely describes one instance of a node.
//
//               NodePaths themselves are lightweight objects that may
//               easily be copied and passed by value.  Their data is
//               stored as a series of NodePathComponents that are
//               stored on the nodes.  Holding a NodePath will keep a
//               reference count to all the nodes in the path.
//               However, if any node in the path is removed or
//               reparented (perhaps through a different NodePath),
//               the NodePath will automatically be updated to reflect
//               the changes.
////////////////////////////////////////////////////////////////////

36 6 Lens * 0 8576 6 Lens * 6 Lens * 0 0 37 0 0 0 0 0 0 0 0 0 0

37 4 Lens 0 2048 4 Lens 4 Lens 0 0 0 0 0 0 0 0 0 0 0 0 668
////////////////////////////////////////////////////////////////////
//       Class : Lens
// Description : A base class for any number of different kinds of
//               lenses, linear and otherwise.  Presently, this
//               includes perspective and orthographic lenses.
//
//               A Lens object is the main part of a Camera node,
//               which defines the fundamental interface to
//               point-of-view for rendering.  Lenses are also used in
//               other contexts, however; for instance, a Spotlight is
//               also defined using a lens.
////////////////////////////////////////////////////////////////////

38 13 atomic string 0 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

39 11 LVecBase3 * 0 8576 11 LVecBase3 * 11 LVecBase3 * 0 0 40 0 0 0 0 0 0 0 0 0 0

40 9 LVecBase3 0 2105344 9 LVecBase3 9 LVecBase3 0 0 41 0 0 0 0 0 0 0 0 0 0

41 10 LVecBase3f 0 2048 10 LVecBase3f 10 LVecBase3f 0 0 0 0 0 0 0 0 0 0 0 0 265
////////////////////////////////////////////////////////////////////
//       Class : LVecBase3
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

42 5 float 0 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

43 4 bool 0 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

0
0
2
44 0 0 25 9 get_nodes 13 get_num_nodes 8 get_node 
45 0 0 25 13 get_ancestors 13 get_num_nodes 12 get_ancestor 
